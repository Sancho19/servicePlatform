@model List<BeautyPlatform.Models.CartItem>
@{
    ViewData["Title"] = "My Cart";
    var grandTotal = Model.Sum(item => item.Product.Price * item.Quantity);
}

<div class="container py-5">
    <h2 class="mb-4 text-center fw-bold">Your Shopping Cart</h2>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success text-center">
            @TempData["SuccessMessage"]
        </div>
    }

    @if (!Model.Any())
    {
        <div class="alert alert-info text-center">Your cart is empty.</div>
    }
    else
    {
        <form id="cartForm" method="post">
            @Html.AntiForgeryToken()

            <div class="row g-4">
                @foreach (var item in Model)
                {
                    <div class="col-12">
                        <div class="card shadow-sm p-3 d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center" data-item-id="@item.Id">
                            <div class="d-flex align-items-start gap-3 w-100">
                                <img src="@item.Product.ImageUrl" class="img-thumbnail me-3" alt="@item.Product.Name" style="width: 100px; height: 100px; object-fit: cover;" />

                                <div class="flex-grow-1">
                                    <div class="d-flex justify-content-between flex-column flex-md-row align-items-md-center">
                                        <div>
                                            <h5 class="fw-semibold mb-1">@item.Product.Name</h5>
                                            <div class="text-muted small mb-2">
                                                @item.Product.Price.ToString("C") <br />
                                                <span class="text-secondary">Qty: @item.Quantity</span>
                                            </div>
                                        </div>

                                        <div class="d-flex align-items-center gap-3 mt-2 mt-md-0">
                                            <strong class="text-dark">@((item.Product.Price * item.Quantity).ToString("C"))</strong>
                                            <button type="button" class="btn btn-outline-danger btn-sm" onclick="openRemoveModal(@item.Id)">
                                                <i class="bi bi-trash"></i>
                                            </button>

                                        </div>
                                    </div>

                                    <div class="input-group mt-2" style="max-width: 120px;">
                                        <input type="number" class="form-control qty-input text-center" value="@item.Quantity" min="1" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <div class="border-top pt-4 mt-5">
                <div class="row align-items-center justify-content-between">
                    <div class="col-md-6 mb-3 mb-md-0">
                        <a href="/Products" class="btn btn-outline-secondary">
                            <i class="bi bi-arrow-left"></i> Continue Shopping
                        </a>
                    </div>
                    <div class="col-md-6 text-md-end">
                        <h4 class="fw-bold mb-3 d-inline-block me-3">
                            Total: <span class="text-success">@grandTotal.ToString("C")</span>
                        </h4>
                        <a href="/Checkout" class="btn btn-success btn-lg">
                            Checkout <i class="bi bi-arrow-right"></i>
                        </a>
                    </div>
                </div>
            </div>
        </form>
    }
</div>
<!-- Remove Confirmation Modal -->
<div class="modal fade" id="removeItemModal" tabindex="-1" aria-labelledby="removeItemModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="removeItemModalLabel">Remove Item</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to remove this item from your cart?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmRemoveBtn">Yes, remove</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        let itemIdToRemove = null;

        function getAntiForgeryToken() {
            return document.querySelector('input[name="__RequestVerificationToken"]').value;
        }

        function updateCart() {
            const rows = document.querySelectorAll('[data-item-id]');
            const updates = [];

            rows.forEach(row => {
                const id = row.getAttribute('data-item-id');
                const qty = row.querySelector('.qty-input').value;
                updates.push({ id: parseInt(id), quantity: parseInt(qty) });
            });

            fetch('/Customer/UpdateCart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': getAntiForgeryToken()
                },
                body: JSON.stringify(updates)
            }).then(res => res.json())
              .then(data => {
                  if (data.success) location.reload();
                  else alert('Failed to update cart.');
              });
        }

        function openRemoveModal(id) {
            itemIdToRemove = id;
            const modal = new bootstrap.Modal(document.getElementById('removeItemModal'));
            modal.show();
        }

        document.getElementById('confirmRemoveBtn').addEventListener('click', function () {
            if (!itemIdToRemove) return;

            fetch(`/Customer/RemoveFromCart/${itemIdToRemove}`, {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': getAntiForgeryToken()
                }
            }).then(res => res.json())
              .then(data => {
                  const modal = bootstrap.Modal.getInstance(document.getElementById('removeItemModal'));
                  modal.hide();

                  if (data.success) {
                      location.reload();
                  } else {
                      alert('Failed to remove item.');
                  }
              });
        });

        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.qty-input').forEach(input => {
                input.addEventListener('change', updateCart);
            });
        });
    </script>
}

